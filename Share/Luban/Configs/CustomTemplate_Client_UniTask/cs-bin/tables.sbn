using Luban;
using Game.LubanTable;

{{namespace_with_grace_begin __namespace}}
    public partial class {{__name}}
    {
        {{~for table in __tables ~}}
        {{~if table.comment != '' ~}}
        /// <summary>
        /// {{escape_comment table.comment}}
        /// </summary>
        {{~end~}}
        public {{table.full_name}} {{format_property_name __code_style table.name}} { get; private set; }

        {{~end~}}

        /// <summary>
        /// 所有数据表名
        /// </summary>
        public readonly string[] TableNames = new[]
        {
            {{~for table in __tables ~}}
           "{{table.output_data_file}}",
            {{~end~}}
        };

        private System.Collections.Generic.Dictionary<string, ILubanTable> m_Tables;
        public System.Collections.Generic.IEnumerable<ILubanTable> DataTables => m_Tables.Values;
        public ILubanTable GetDataTable(string tableName) => m_Tables.TryGetValue(tableName, out var v) ? v : null;
    
        public async Cysharp.Threading.Tasks.UniTask LoadAsync(System.Func<string, Cysharp.Threading.Tasks.UniTask<ByteBuf>> loader)
        {
            m_Tables = new System.Collections.Generic.Dictionary<string, ILubanTable>();
            var loadTasks = new System.Collections.Generic.List<Cysharp.Threading.Tasks.UniTask>();
    
            {{~for table in __tables ~}}
            {{format_property_name __code_style table.name}} = new {{table.full_name}}(() => loader("{{table.output_data_file}}"));
            loadTasks.Add({{format_property_name __code_style table.name}}.LoadAsync());
            m_Tables.Add("{{table.full_name}}", {{format_property_name __code_style table.name}});
            {{~end~}}
    
            await Cysharp.Threading.Tasks.UniTask.WhenAll(loadTasks);
    
            Refresh();
        }
    
        private void ResolveRef()
        {
            {{~for table in __tables ~}}
            {{format_property_name __code_style table.name}}.ResolveRef(this);
            {{~end~}}
            PostResolveRef();
        }
    
        public void Refresh()
        {
            PostInit();
            ResolveRef();
        }
    
        partial void PostInit();
        partial void PostResolveRef();
    }
{{namespace_with_grace_end __namespace}}