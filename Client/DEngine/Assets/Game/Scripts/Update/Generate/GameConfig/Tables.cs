
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Game.Config;

namespace Game.Config
{
public partial class Tables
{
    public Item.TbItem TbItem { private set; get; }
    private System.Collections.Generic.Dictionary<string, IConfig> _tables;
    public System.Collections.Generic.IEnumerable<IConfig> DataTables => _tables.Values;
    public IConfig GetDataTable(string tableName) => _tables.TryGetValue(tableName, out var v) ? v : null;

    public async Cysharp.Threading.Tasks.UniTask LoadAsync(System.Func<string, Cysharp.Threading.Tasks.UniTask<ByteBuf>> loader)
    {
        _tables = new System.Collections.Generic.Dictionary<string, IConfig>();
        var loadTasks = new System.Collections.Generic.List<Cysharp.Threading.Tasks.UniTask>();

        TbItem = new Item.TbItem(() => loader("item_tbitem"));
        loadTasks.Add(TbItem.LoadAsync());
        _tables.Add("Item.TbItem", TbItem);

        await Cysharp.Threading.Tasks.UniTask.WhenAll(loadTasks);

        Refresh();
    }

    private void ResolveRef()
    {
        TbItem.ResolveRef(this);
        PostResolveRef();
    }

    public void Refresh()
    {
        PostInit();
        ResolveRef();
    }

    partial void PostInit();
    partial void PostResolveRef();
}
}
