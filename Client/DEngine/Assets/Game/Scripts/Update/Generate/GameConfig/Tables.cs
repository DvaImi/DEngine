
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Game.LubanTable;

namespace Game.LubanTable
{
    public partial class Tables
    {
        public Item.TbItem TbItem { get; private set; }


        /// <summary>
        /// 所有数据表名
        /// </summary>
        public readonly string[] TableNames = new[]
        {
           "TBItem",
        };

        private System.Collections.Generic.Dictionary<string, ILubanTable> m_Tables;
        public System.Collections.Generic.IEnumerable<ILubanTable> DataTables => m_Tables.Values;
        public ILubanTable GetDataTable(string tableName) => m_Tables.TryGetValue(tableName, out var v) ? v : null;
    
        public async Cysharp.Threading.Tasks.UniTask LoadAsync(System.Func<string, Cysharp.Threading.Tasks.UniTask<ByteBuf>> loader)
        {
            m_Tables = new System.Collections.Generic.Dictionary<string, ILubanTable>();
            var loadTasks = new System.Collections.Generic.List<Cysharp.Threading.Tasks.UniTask>();
    
            TbItem = new Item.TbItem(() => loader("TBItem"));
            loadTasks.Add(TbItem.LoadAsync());
            m_Tables.Add("Item.TbItem", TbItem);
    
            await Cysharp.Threading.Tasks.UniTask.WhenAll(loadTasks);
    
            Refresh();
        }
    
        private void ResolveRef()
        {
            TbItem.ResolveRef(this);
            PostResolveRef();
        }
    
        public void Refresh()
        {
            PostInit();
            ResolveRef();
        }
    
        partial void PostInit();
        partial void PostResolveRef();
    }
}
