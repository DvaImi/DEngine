
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Luban;
using Game.LubanTable;

namespace Game.LubanTable.Item
{
    public partial class TbItem : ILubanTable
    {
        private readonly System.Collections.Generic.Dictionary<int, Item.DCItem> m_DataMap;
        private readonly System.Collections.Generic.List<Item.DCItem> m_DataList;
        private readonly System.Func<Cysharp.Threading.Tasks.UniTask<ByteBuf>> m_LoadFunc;
    
        public TbItem(System.Func<Cysharp.Threading.Tasks.UniTask<ByteBuf>> loadFunc)
        {
            m_DataMap = new System.Collections.Generic.Dictionary<int, Item.DCItem>();
            m_DataList = new System.Collections.Generic.List<Item.DCItem>();
            m_LoadFunc = loadFunc;
        }
    
        public async Cysharp.Threading.Tasks.UniTask LoadAsync()
        {
            ByteBuf _buf = await m_LoadFunc();
            m_DataMap.Clear();
            m_DataList.Clear();
            for(int n = _buf.ReadSize() ; n > 0 ; --n)
            {
                Item.DCItem _v;
                _v = Item.DCItem.DeserializeDCItem(_buf);
                m_DataList.Add(_v);
                m_DataMap.Add(_v.Id, _v);
            }
            PostInit();
        }
    
        public System.Collections.Generic.Dictionary<int, Item.DCItem> DataMap => m_DataMap;
        public System.Collections.Generic.List<Item.DCItem> DataList => m_DataList;
        public Item.DCItem GetOrDefault(int key) => m_DataMap.TryGetValue(key, out var v) ? v : null;
        public Item.DCItem Get(int key) => m_DataMap[key];
        public Item.DCItem this[int key] => m_DataMap[key];
    
        public void ResolveRef(Tables tables)
        {
            foreach(var _v in m_DataList)
            {
                _v.ResolveRef(tables);
            }
            PostResolveRef();
        }
    
    
        partial void PostInit();
        partial void PostResolveRef();
    }
}
